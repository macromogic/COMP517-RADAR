@Article{Einstein,
  author =       "Albert Einstein",
  title =        "{Zur Elektrodynamik bewegter K{\"o}rper}. ({German})
                 [{On} the electrodynamics of moving bodies]",
  journal =      "Annalen der Physik",
  volume =       "322",
  number =       "10",
  pages =        "891--921",
  year =         "1905",
  DOI =          "http://dx.doi.org/10.1002/andp.19053221004"
} 

@article{cybereason_2022, 
    url={https://www.cybereason.com/hubfs/dam/collateral/reports/Ransomware-The-True-Cost-to-Business-2022.pdf}, 
    author={Cybereason},
    journal={Ransomware The True Cost to Business}, 
    year={2022}
}

@article{wannacry_2017, 
    url={https://www.bbc.com/news/technology-39901382}, 
    title={The malware is thought to have been created with tools stolen from the US National Security Agency.}, 
    journal={BBC News}, 
    year={2017}, 
    month={May}, 
    language={en-GB} 
}

@article{Chen2019AutomatedRB,
  title={Automated Ransomware Behavior Analysis: Pattern Extraction and Early Detection},
  author={Qian Chen and Sheikh Rabiul Islam and Henry Haswell and Robert A. Bridges},
  journal={ArXiv},
  year={2019},
  volume={abs/1910.06469}
}


@article{Morat2018RansomwareED,
  title={Ransomware early detection by the analysis of file sharing traffic},
  author={Daniel Morat{\'o} and Eduardo Berrueta and Eduardo Maga{\~n}a and Mikel Izal},
  journal={J. Netw. Comput. Appl.},
  year={2018},
  volume={124},
  pages={14-32}
}

@article{MORATO201814,
title = {Ransomware early detection by the analysis of file sharing traffic},
journal = {Journal of Network and Computer Applications},
volume = {124},
pages = {14-32},
year = {2018},
issn = {1084-8045},
doi = {https://doi.org/10.1016/j.jnca.2018.09.013},
url = {https://www.sciencedirect.com/science/article/pii/S108480451830300X},
author = {Daniel Morato and Eduardo Berrueta and Eduardo Magaña and Mikel Izal},
keywords = {Ransomware, Malware detection, Traffic analysis, Network security}
}

@ARTICLE{8051108,  author={Homayoun, Sajad and Dehghantanha, Ali and Ahmadzadeh, Marzieh and Hashemi, Sattar and Khayami, Raouf},  journal={IEEE Transactions on Emerging Topics in Computing},   title={Know Abnormal, Find Evil: Frequent Pattern Mining for Ransomware Threat Hunting and Intelligence},   year={2020},  volume={8},  number={2},  pages={341-351},  doi={10.1109/TETC.2017.2756908}}

@article{Verma2018DefiningAM,
  title={Defining a Metric Space of Host Logs and Operational Use Cases},
  author={Miki E. Verma and Robert A. Bridges},
  journal={2018 IEEE International Conference on Big Data (Big Data)},
  year={2018},
  pages={5068-5077}
}

@inproceedings{CuckooSS,
  title={Cuckoo Sandbox-open source automated malware analysis},
  author={}
}

@inproceedings{10.1145/1065010.1065034,
author = {Luk, Chi-Keung and Cohn, Robert and Muth, Robert and Patil, Harish and Klauser, Artur and Lowney, Geoff and Wallace, Steven and Reddi, Vijay Janapa and Hazelwood, Kim},
title = {Pin: Building Customized Program Analysis Tools with Dynamic Instrumentation},
year = {2005},
isbn = {1595930566},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1065010.1065034},
doi = {10.1145/1065010.1065034},
abstract = {Robust and powerful software instrumentation tools are essential for program analysis tasks such as profiling, performance evaluation, and bug detection. To meet this need, we have developed a new instrumentation system called Pin. Our goals are to provide easy-to-use, portable, transparent, and efficient instrumentation. Instrumentation tools (called Pintools) are written in C/C++ using Pin's rich API. Pin follows the model of ATOM, allowing the tool writer to analyze an application at the instruction level without the need for detailed knowledge of the underlying instruction set. The API is designed to be architecture independent whenever possible, making Pintools source compatible across different architectures. However, a Pintool can access architecture-specific details when necessary. Instrumentation with Pin is mostly transparent as the application and Pintool observe the application's original, uninstrumented behavior. Pin uses dynamic compilation to instrument executables while they are running. For efficiency, Pin uses several techniques, including inlining, register re-allocation, liveness analysis, and instruction scheduling to optimize instrumentation. This fully automated approach delivers significantly better instrumentation performance than similar tools. For example, Pin is 3.3x faster than Valgrind and 2x faster than DynamoRIO for basic-block counting. To illustrate Pin's versatility, we describe two Pintools in daily use to analyze production software. Pin is publicly available for Linux platforms on four architectures: IA32 (32-bit x86), EM64T (64-bit x86), Itanium®, and ARM. In the ten months since Pin 2 was released in July 2004, there have been over 3000 downloads from its website.},
booktitle = {Proceedings of the 2005 ACM SIGPLAN Conference on Programming Language Design and Implementation},
pages = {190–200},
numpages = {11},
keywords = {instrumentation, program analysis tools, dynamic compilation},
location = {Chicago, IL, USA},
series = {PLDI '05}
}

@article{pin,
author = {Luk, Chi-Keung and Cohn, Robert and Muth, Robert and Patil, Harish and Klauser, Artur and Lowney, Geoff and Wallace, Steven and Reddi, Vijay Janapa and Hazelwood, Kim},
title = {Pin: Building Customized Program Analysis Tools with Dynamic Instrumentation},
year = {2005},
issue_date = {June 2005},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {40},
number = {6},
issn = {0362-1340},
url = {https://doi.org/10.1145/1064978.1065034},
doi = {10.1145/1064978.1065034},
journal = {SIGPLAN Not.},
month = {jun},
pages = {190–200},
numpages = {11},
keywords = {instrumentation, dynamic compilation, program analysis tools}
}

@inproceedings {197235,
	author = {Amin Kharaz and Sajjad Arshad and Collin Mulliner and William Robertson and Engin Kirda},
	title = {{UNVEIL}: A {Large-Scale}, Automated Approach to Detecting Ransomware},
	booktitle = {25th USENIX Security Symposium (USENIX Security 16)},
	year = {2016},
	isbn = {978-1-931971-32-4},
	address = {Austin, TX},
	pages = {757--772},
	url = {https://www.usenix.org/conference/usenixsecurity16/technical-sessions/presentation/kharaz},
	publisher = {USENIX Association},
	month = aug,
}
